(()=>{"use strict";var t={d:(e,i)=>{for(var s in i)t.o(i,s)&&!t.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:i[s]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)};t.d({},{z2:()=>R,hM:()=>S,TO:()=>j,Er:()=>L});const e=document.querySelector("#canvas"),i=e.getContext("2d"),s={dev:{currentScene:0,inDevelopmendMode:!1,inColDetectionMode:!1,launched:!1,paused:!1,lastPossibleScene:0},canvas:{width:320,height:176},physics:{gravityScale:.1,velocity:1.2,jumpHeight:1.6,climbSpeed:4,onWaterSpeed:.182},stats:{score:0,topScore:0,lives:5,collectedLanterns:0,visited:[0]}};for(;s.dev.inDevelopmendMode;)s.physics.velocity=.6;e.width=s.canvas.width,e.height=s.canvas.height;const h=[{id:0,sprite:"../assets/map/level_0.jpg",colliders:[{id:0,name:"floor",x:0,y:e.height-6+1,width:e.width,height:6},{id:1,name:"fence",x:0,y:e.height-68,width:8,height:68},{id:2,name:"fence",x:e.width-8,y:e.height-42,width:8,height:36},{id:3,name:"platform",x:0,y:e.height-72+1,width:32,height:8},{id:4,name:"platform",x:e.width-118,y:e.height-56+1,width:118,height:14},{id:5,name:"platform",x:0,y:77,width:136,height:4},{id:6,name:"platform",x:176,y:77,width:32,height:4},{id:7,name:"platform",x:e.width-70,y:73,width:70,height:16},{id:8,name:"prop",x:10,y:48,width:20,height:32},{id:9,name:"border-top",x:0,y:0,width:e.width,height:0},{id:10,name:"border-left",x:0,y:0,width:0,height:e.height}],lanterns:[{id:0,name:"lantern",x:18,y:134,width:6,height:10,collected:!1},{id:1,name:"lantern",x:202,y:134,width:6,height:10,collected:!1},{id:2,name:"lantern",x:232,y:134,width:6,height:10,collected:!1},{id:3,name:"lantern",x:304,y:134,width:6,height:10,collected:!1},{id:4,name:"lantern",x:304,y:86,width:6,height:10,collected:!1},{id:5,name:"lantern",x:250,y:86,width:6,height:10,collected:!1}],triggers:[{id:0,name:"ladder",x:144,y:80,width:24,height:58,mode:"ladder"},{id:1,name:"loader",x:e.width,y:0,width:0,height:e.height,mode:"loader",level:1,dir:"right"}],traps:[],platforms:[{id:0,name:"platform",x:48,y:71,width:32,height:2},{id:1,name:"platform",x:104,y:71,width:24,height:2},{id:2,name:"platform",x:184,y:71,width:16,height:2},{id:3,name:"platform",x:136,y:77,width:40,height:2}],entrances:[{id:0,name:"entrance",x:298,y:48},{id:1,name:"entrance",x:298,y:92}],defaultPlayerPosition:{x:30,y:150}},{id:1,sprite:"../assets/map/level_1.jpg",defaults:[30,150],colliders:[{id:0,name:"floor",x:0,y:e.height-6+1,width:150,height:6},{id:1,name:"floor",x:170,y:e.height-6+1,width:e.width-170,height:6},{id:2,name:"fence",x:0,y:e.height-42,width:8,height:36},{id:3,name:"fence",x:e.width-16,y:e.height-42,width:8,height:36},{id:4,name:"fence",x:304,y:86,width:8,height:36},{id:5,name:"platform",x:0,y:121,width:126,height:14},{id:6,name:"platform",x:194,y:121,width:126,height:14},{id:7,name:"platform",x:0,y:73,width:78,height:14},{id:8,name:"platform",x:120,y:77,width:24,height:4},{id:9,name:"platform",x:176,y:77,width:24,height:4},{id:10,name:"platform",x:242,y:73,width:78,height:14}],lanterns:[{id:0,name:"lantern",x:48,y:134,width:6,height:10,collected:!1,door:null},{id:1,name:"lantern",x:120,y:134,width:6,height:10,collected:!1,door:null},{id:2,name:"lantern",x:72,y:86,width:6,height:10,collected:!1,door:null},{id:3,name:"lantern",x:242,y:86,width:6,height:10,collected:!1,door:null},{id:4,name:"lantern",x:194,y:134,width:6,height:10,collected:!1,door:null},{id:5,name:"lantern",x:256,y:134,width:6,height:10,collected:!1,door:null}],triggers:[{id:0,name:"ladder",x:152,y:80,width:16,height:8,mode:"ladder"},{id:1,name:"ladder",x:152,y:114,width:16,height:26,mode:"ladder"},{id:3,name:"loader",dir:"left",x:0,y:0,width:0,height:e.height,mode:"loader",level:0},{id:4,name:"loader",dir:"right",x:e.width,y:0,width:0,height:e.height,mode:"loader",level:2},{id:5,name:"loader",dir:"down",x:0,y:e.height+20,width:e.width,height:20,mode:"loader",level:3,hatch:{x:56,y:0,width:32,heigth:16}},{id:6,name:"door",x:152,y:e.height-6+1,width:16,height:10,mode:"door",opened:!1,model:0,keyOpened:!1,key:22}],traps:[],platforms:[{id:0,name:"platform",x:112,y:77,width:96,height:2},{id:1,name:"platform",x:120,y:71,width:24,height:2},{id:2,name:"platform",x:176,y:71,width:24,height:2},{id:3,name:"platform",x:154,y:111,width:12,height:2}],entrances:[{id:0,name:"entrance",x:8,y:48},{id:1,name:"entrance",x:294,y:48},{id:2,name:"entrance",x:8,y:92}],defaultPlayerPosition:{x:8,y:96}},{id:2,sprite:"../assets/map/level_2.jpg",colliders:[{id:0,name:"floor",x:0,y:e.height-6+1,width:e.width,height:6},{id:1,name:"fence",x:0,y:e.height-42,width:8,height:36},{id:2,name:"fence",x:0,y:86,width:8,height:36},{id:3,name:"platform",x:0,y:121,width:46,height:14},{id:4,name:"platform",x:74,y:121,width:52,height:14},{id:5,name:"platform",x:170,y:121,width:52,height:14},{id:6,name:"platform",x:0,y:73,width:80,height:14},{id:7,name:"weird-platform",x:80,y:75,width:24,height:6},{id:8,name:"platform",x:178,y:73,width:36,height:14},{id:9,name:"fence",x:248,y:80,width:8,height:48},{id:10,name:"fence",x:248,y:80,width:8,height:48},{id:11,name:"fence",x:240,y:74,width:80,height:6},{id:12,name:"fence",x:e.width-8,y:80,width:8,height:48},{id:13,name:"fence",x:e.width-8,y:128,width:8,height:48},{id:14,name:"prop",x:274,y:48,width:20,height:32}],lanterns:[{id:0,name:"lantern",x:40,y:86,width:6,height:10,collected:!1,door:null},{id:1,name:"lantern",x:72,y:86,width:6,height:10,collected:!1,door:null},{id:2,name:"lantern",x:40,y:134,width:6,height:10,collected:!1,door:null},{id:3,name:"lantern",x:74,y:134,width:6,height:10,collected:!1,door:null},{id:4,name:"lantern",x:120,y:134,width:6,height:10,collected:!1,door:null},{id:5,name:"lantern",x:178,y:86,width:6,height:10,collected:!1,door:null},{id:6,name:"lantern",x:208,y:86,width:6,height:10,collected:!1,door:null},{id:7,name:"lantern",x:242,y:86,width:6,height:10,collected:!1,door:null},{id:8,name:"lantern",x:170,y:134,width:6,height:10,collected:!1,door:null},{id:9,name:"lantern",x:216,y:134,width:6,height:10,collected:!1,door:null}],triggers:[{id:0,name:"ladder",x:136,y:78,width:24,height:60,mode:"ladder"},{id:1,name:"loader",dir:"left",x:0,y:0,width:0,height:e.height,mode:"loader",level:1}],traps:[],platforms:[{id:0,name:"platform",x:136,y:75,width:24,height:2},{id:1,name:"platform",x:80,y:75,width:24,height:2}],entrances:[{id:0,name:"entrance",x:8,y:48}],defaultPlayerPosition:{x:8,y:48}},{id:3,sprite:"../assets/map/level_3.jpg",colliders:[{id:0,name:"floor",x:0,y:e.height-8+1,width:e.width,height:8},{id:1,name:"platform",x:0,y:9,width:52,height:6},{id:2,name:"platform",x:92,y:9,width:176,height:6},{id:3,name:"platform",x:300,y:9,width:20,height:6},{id:4,name:"platform",x:32,y:57,width:236,height:6},{id:5,name:"platform",x:300,y:57,width:20,height:6},{id:6,name:"platform",x:8,y:105,width:204,height:6},{id:7,name:"platform",x:244,y:105,width:24,height:6},{id:8,name:"platform",x:300,y:105,width:24,height:6},{id:9,name:"fence",x:0,y:16,width:8,height:112},{id:10,name:"fence",x:8,y:0,width:8,height:12},{id:11,name:"fence",x:40,y:0,width:8,height:12},{id:12,name:"fence",x:96,y:0,width:8,height:12},{id:13,name:"fence",x:224,y:0,width:8,height:12},{id:14,name:"fence",x:256,y:0,width:8,height:12},{id:15,name:"fence",x:304,y:0,width:8,height:12},{id:16,name:"fence",x:228,y:16,width:32,height:6},{id:17,name:"fence",x:240,y:22,width:8,height:38},{id:18,name:"fence",x:240,y:112,width:8,height:16},{id:19,name:"fence",x:248,y:112,width:8,height:60},{id:20,name:"fence",x:256,y:64,width:8,height:44},{id:21,name:"fence",x:208,y:112,width:8,height:16},{id:22,name:"fence",x:200,y:112,width:8,height:16},{id:23,name:"fence",x:192,y:112,width:8,height:22},{id:24,name:"fence",x:8,y:112,width:8,height:22},{id:25,name:"fence",x:312,y:112,width:8,height:60}],lanterns:[{id:0,name:"lantern",x:16,y:22,width:6,height:10,collected:!1,door:null},{id:1,name:"lantern",x:48,y:22,width:6,height:10,collected:!1,door:null},{id:3,name:"lantern",x:226,y:22,width:6,height:10,collected:!1,door:null},{id:4,name:"lantern",x:256,y:22,width:6,height:10,collected:!1,door:null},{id:5,name:"lantern",x:306,y:22,width:6,height:10,collected:!1,door:null},{id:6,name:"lantern",x:242,y:70,width:6,height:10,collected:!1,door:null},{id:7,name:"lantern",x:16,y:134,width:6,height:10,collected:!1,door:2},{id:8,name:"lantern",x:186,y:134,width:6,height:10,collected:!1,door:null},{id:9,name:"lantern",x:208,y:134,width:6,height:10,collected:!1,door:1},{id:10,name:"lantern",x:242,y:134,width:6,height:10,collected:!1,door:null}],triggers:[{id:0,name:"loader",dir:"custom",x:0,y:0,width:0,height:e.height,mode:"loader",level:4,custom:{x:e.width-20-.1,y:32}},{id:1,name:"door",x:200,y:128,width:8,height:44,mode:"door",opened:!1,model:1,keyOpened:!0},{id:2,name:"door",x:0,y:128,width:8,height:44,mode:"door",opened:!1,model:1,keyOpened:!0},{id:3,name:"water",x:272,y:16,width:24,height:160,mode:"water",dir:"up",model:0}],traps:[{id:0,name:"trap",x:8,y:58,width:24,height:6,mode:"trap",dmg:200,model:1,timeout:240},{id:1,name:"trap",x:216,y:122,width:24,height:6,mode:"trap",dmg:200,model:1,timeout:240}],platforms:[],entrances:[{id:0,name:"entrance",x:64,y:-10}],defaultPlayerPosition:{x:64,y:-10}},{id:4,sprite:"../assets/map/level_4.jpg",colliders:[{id:0,name:"floor",x:48,y:e.height-22+1,width:96,height:4},{id:0,name:"floor",x:176,y:e.height-22+1,width:144,height:4},{id:0,name:"fence",x:176,y:e.height-18,width:144,height:18},{id:0,name:"fence",x:48,y:e.height-18,width:96,height:18},{id:0,name:"fence",x:40,y:60,width:8,height:116},{id:0,name:"fence",x:0,y:14,width:8,height:e.height},{id:0,name:"fence",x:192,y:0,width:128,height:12},{id:0,name:"platform",x:8,y:9,width:120,height:6},{id:0,name:"platform",x:192,y:9,width:120,height:6},{id:0,name:"fence",x:80,y:16,width:8,height:98},{id:0,name:"fence",x:120,y:80,width:8,height:74},{id:0,name:"fence",x:112,y:62,width:24,height:20},{id:0,name:"platform",x:112,y:61,width:32,height:6},{id:0,name:"platform",x:176,y:61,width:32,height:6},{id:0,name:"fence",x:184,y:62,width:24,height:20},{id:0,name:"fence",x:192,y:80,width:8,height:36},{id:0,name:"fence",x:232,y:16,width:8,height:98},{id:0,name:"fence",x:e.width-8,y:60,width:8,height:94},{id:0,name:"fence",x:0,y:0,width:128,height:12},{id:0,name:"fence",x:272,y:60,width:8,height:60},{id:0,name:"fence",x:0,y:0,width:8,height:16},{id:26,name:"ceiling",x:0,y:0,width:e.width,height:2}],lanterns:[{id:0,name:"lantern",x:88,y:38,width:6,height:10,collected:!1,door:4},{id:1,name:"lantern",x:226,y:38,width:6,height:10,collected:!1,door:5}],triggers:[{id:0,name:"ladder",x:56,y:16,width:16,height:110,mode:"ladder"},{id:1,name:"ladder",x:248,y:16,width:16,height:110,mode:"ladder"},{id:2,name:"loader",dir:"custom",x:e.width,y:0,width:0,height:e.height,mode:"loader",level:3,custom:{x:.1,y:140}},{id:3,name:"water",x:144,y:1,width:32,height:160,mode:"water",dir:"up",model:1},{id:4,name:"door",x:88,y:109,width:32,height:4,mode:"door",opened:!1,model:2,keyOpened:!0},{id:5,name:"door",x:200,y:109,width:32,height:4,mode:"door",opened:!1,model:3,keyOpened:!0},{id:6,name:"loader",dir:"down",x:0,y:e.height+20,width:e.width,height:20,mode:"loader",level:6,hatch:{x:28,y:0,width:36,heigth:6}}],traps:[{id:0,name:"trap",x:132,y:0,width:2,height:16,mode:"spike",dmg:100,timeout:240},{id:1,name:"trap",x:140,y:0,width:2,height:16,mode:"spike",dmg:100,timeout:240},{id:2,name:"trap",x:180,y:0,width:2,height:16,mode:"spike",dmg:100,timeout:240},{id:3,name:"trap",x:188,y:0,width:2,height:16,mode:"spike",dmg:100,timeout:240},{id:4,name:"trap",x:132,y:80,width:2,height:16,mode:"spike",dmg:100,timeout:240},{id:5,name:"trap",x:140,y:64,width:2,height:16,mode:"spike",dmg:100,timeout:240},{id:6,name:"trap",x:180,y:64,width:2,height:16,mode:"spike",dmg:100,timeout:240},{id:7,name:"trap",x:188,y:80,width:2,height:16,mode:"spike",dmg:100,timeout:240},{id:8,name:"trap",x:8,y:154,width:24,height:6,mode:"trap",dmg:200,model:2,timeout:240},{id:9,name:"trap",x:90,y:84,width:24,height:6,mode:"trap",dmg:200,model:2,timeout:240},{id:9,name:"trap",x:204,y:84,width:24,height:6,mode:"trap",dmg:200,model:2,timeout:240}],platforms:[],entrances:[{id:0,name:"entrance",x:286,y:56}],defaultPlayerPosition:{x:286,y:56}},{id:5,sprite:"../assets/map/level_5.jpg",colliders:[{id:0,name:"floor",x:0,y:e.height-8,width:e.width,height:8}],lanterns:[],triggers:[],traps:[],platforms:[],defaultPlayerPosition:{x:286,y:56}},{id:6,sprite:"../assets/map/level_6.jpg",colliders:[{id:0,name:"floor",x:0,y:e.height-16,width:e.width,height:16},{id:1,name:"fence",x:0,y:0,width:8,height:54},{id:2,name:"fence",x:8,y:0,width:8,height:96},{id:3,name:"fence",x:0,y:96,width:320,height:16},{id:4,name:"fence",x:304,y:0,width:8,height:40},{id:5,name:"fence",x:312,y:0,width:8,height:54},{id:6,name:"platform",x:0,y:90,width:320,height:6},{id:7,name:"platform",x:0,y:158,width:320,height:6},{id:8,name:"platform",x:288,y:156,width:32,height:2},{id:9,name:"platform",x:16,y:43,width:248,height:6},{id:10,name:"fence",x:0,y:96,width:8,height:70},{id:11,name:"ceiling",x:64,y:0,width:200,height:6},{id:12,name:"ceiling",x:16,y:0,width:10,height:6},{id:13,name:"ceiling",x:272,y:0,width:48,height:6}],lanterns:[{id:0,name:"lantern",x:24,y:6,width:6,height:10,collected:!1,door:null},{id:1,name:"lantern",x:98,y:6,width:6,height:10,collected:!1,door:null},{id:2,name:"lantern",x:104,y:6,width:6,height:10,collected:!1,door:null},{id:3,name:"lantern",x:202,y:6,width:6,height:10,collected:!1,door:null},{id:4,name:"lantern",x:208,y:6,width:6,height:10,collected:!1,door:3},{id:5,name:"lantern",x:42,y:54,width:6,height:10,collected:!1,door:2},{id:6,name:"lantern",x:48,y:54,width:6,height:10,collected:!1,door:null},{id:7,name:"lantern",x:98,y:54,width:6,height:10,collected:!1,door:null},{id:8,name:"lantern",x:104,y:54,width:6,height:10,collected:!1,door:null},{id:9,name:"lantern",x:202,y:54,width:6,height:10,collected:!1,door:null},{id:10,name:"lantern",x:208,y:54,width:6,height:10,collected:!1,door:null}],triggers:[{id:1,name:"loader",dir:"custom",x:e.width,y:0,width:0,height:e.height,mode:"loader",level:7,custom:{x:8,y:20}},{id:2,name:"door",x:304,y:40,width:8,height:54,mode:"door",opened:!1,model:4,keyOpened:!0},{id:3,name:"door",x:264,y:0,width:8,height:54,mode:"door",opened:!1,model:4,keyOpened:!0}],traps:[],platforms:[{id:0,name:"platform",x:16,y:151,width:16,height:2},{id:2,name:"platform",x:8,y:156,width:32,height:2}],entrances:[{id:0,name:"entrance",x:32,y:-10}],defaultPlayerPosition:{x:32,y:-10}},{id:7,sprite:"../assets/map/level_7.jpg",colliders:[{id:0,name:"ceiling",x:0,y:0,width:120,height:4},{id:0,name:"ceiling",x:202,y:0,width:120,height:4},{id:1,name:"fence",x:0,y:46,width:16,height:80},{id:1,name:"fence",x:272,y:46,width:8,height:68},{id:2,name:"fence",x:112,y:62,width:8,height:62},{id:3,name:"fence",x:200,y:62,width:8,height:62},{id:4,name:"fence",x:104,y:0,width:8,height:72},{id:5,name:"platform",x:44,y:168,width:24,height:6},{id:6,name:"platform",x:0,y:168,width:8,height:6},{id:7,name:"platform",x:92,y:168,width:40,height:6},{id:8,name:"platform",x:92,y:120,width:32,height:6},{id:9,name:"platform",x:196,y:120,width:32,height:6},{id:10,name:"platform",x:188,y:168,width:40,height:6},{id:12,name:"platform",x:252,y:168,width:24,height:6},{id:13,name:"platform",x:304,y:46,width:16,height:82},{id:14,name:"platform",x:312,y:168,width:8,height:6},{id:15,name:"fence",x:304,y:128,width:8,height:48},{id:15,name:"fence",x:208,y:0,width:8,height:80},{id:16,name:"door",x:8,y:128,width:8,height:54},{id:17,name:"fence",x:40,y:46,width:8,height:68},{id:17,name:"fence",x:304,y:0,width:8,height:48}],lanterns:[],triggers:[{id:0,name:"loader",dir:"custom",x:0,y:0,width:0,height:e.height,mode:"loader",level:6,custom:{x:e.width-8,y:64}},{id:0,name:"loader",dir:"custom",x:0,y:e.height,width:e.width,height:0,mode:"loader",level:11,custom:{x:e.width/2,y:0}},{id:1,name:"water",x:16,y:46,width:24,height:130,mode:"water",dir:"up",model:3},{id:2,name:"water",x:136,y:1,width:24,height:159,mode:"water",dir:"up",model:3},{id:3,name:"water",x:161,y:1,width:24,height:159,mode:"water",dir:"up",model:3},{id:4,name:"water",x:280,y:46,width:24,height:130,mode:"water",dir:"up",model:3}],traps:[{id:0,name:"trap",x:48,y:62,width:24,height:6,mode:"trap",dmg:200,model:0,timeout:480},{id:0,name:"trap",x:216,y:62,width:24,height:6,mode:"trap",dmg:200,model:0,timeout:480}],platforms:[{id:0,name:"platform",x:0,y:45,width:48,height:2},{id:1,name:"platform",x:48,y:77,width:8,height:4},{id:1,name:"platform",x:264,y:77,width:8,height:4},{id:2,name:"platform",x:112,y:60,width:24,height:4},{id:3,name:"platform",x:186,y:60,width:22,height:4},{id:4,name:"platform",x:272,y:45,width:48,height:2}],defaultPlayerPosition:{x:8,y:20}},{id:8,sprite:"../assets/map/level_8.jpg",colliders:[{id:0,name:"floor",x:0,y:e.height-8,width:e.width,height:8}],lanterns:[],triggers:[],traps:[],platforms:[],defaultPlayerPosition:{x:30,y:150}},{id:9,sprite:"../assets/map/dead.jpg",colliders:[{id:0,name:"floor",x:0,y:e.height-8,width:e.width,height:8}],lanterns:[],triggers:[],traps:[],platforms:[],defaultPlayerPosition:{x:30,y:150}},{id:10,sprite:"../assets/start-screen.jpg",colliders:[{id:0,name:"floor",x:0,y:e.height-8,width:e.width,height:8}],lanterns:[],triggers:[],traps:[],platforms:[],defaultPlayerPosition:{x:30,y:150}},{id:11,sprite:"../assets/map/boss.jpg",colliders:[{id:0,name:"floor",x:0,y:e.height-2,width:e.width,height:8},{id:1,name:"fence",x:0,y:0,width:0,height:e.height},{id:2,name:"fence",x:e.width,y:0,width:0,height:e.height}],lanterns:[],triggers:[],traps:[],platforms:[],defaultPlayerPosition:{x:30,y:150}}];class a{constructor(t,e,i=1){if(this.anim=()=>{this.elapsedFrames++,this.elapsedFrames%this.frameBuffer==0&&(this.currentFrame<this.frameRate-1?this.currentFrame++:this.currentFrame=0)},this.loaded=!1,this.position=t.position,this.scale=t.scale,this.image=new Image,this.image.onload=()=>{this.scale.width=this.image.width/i,this.scale.height=this.image.height,this.loaded=!0},this.image.src=e.idle.imageSrc,this.animations=e,this.frameRate=i,this.currentFrame=0,this.elapsedFrames=0,this.frameBuffer=8,this.animations)for(let t in this.animations){const e=new Image;e.src=this.animations[t].imageSrc,this.frameRate=this.animations[t].frameRate,this.frameBuffer=this.animations[t].frameBuffer,this.animations[t].image=e}}render(){this.scale.width=this.image.width/this.frameRate,this.scale.height=this.image.height,this.loaded=!0;const t={position:{x:this.scale.width*this.currentFrame,y:0},width:this.scale.width,height:this.scale.height};i.imageSmoothingEnabled=!1,i.drawImage(this.image,t.position.x,t.position.y,t.width,t.height,this.position.x,this.position.y,this.scale.width,this.scale.height),this.anim()}update(){this.render()}}class o extends a{constructor(t,{id:e,model:i,key:s,keyOpened:h}){super(t,{idle:{frameRate:1,frameBuffer:30,loop:!0,imageSrc:"../assets/sprites/door/model-"+i+".jpg"}}),this.id=e,this.model=i,this.key=s,this.opened=!1,this.keyOpened=h,this.scale=t.scale,this.position=t.position}update(){this.opened||this.render(),this.onOpen()}onOpen(){this.keyOpened&&h[s.dev.currentScene].triggers.map((t=>{t.id===this.id&&(this.opened=t.opened)})),!this.keyOpened&&s.stats.collectedLanterns>=this.key&&(this.opened=!0),this.opened&&(L.doors=L.doors.filter((t=>t.id!==this.id)),h[s.dev.currentScene].triggers.map((t=>t.id===this.id?t.opened=!0:null)))}}function r(t,e){return t.position.y+t.scale.height>=e.y&&t.position.y<=e.y+e.height&&t.position.x<=e.x+e.width&&t.position.x+t.scale.width>=e.x}function d(t,e){return t.position.y+t.scale.height>=e.position.y&&t.position.y<=e.position.y+e.scale.height&&t.position.x<=e.position.x+e.scale.width&&t.position.x+t.scale.width>=e.position.x}function n(t,e){return t.position.y+t.scale.height>=e.y&&t.position.y+t.scale.height<=e.y+e.height&&t.position.x<=e.x+e.width&&t.position.x+t.scale.width>=e.x}function l(t,e){let i="";if(t.toString().length<e)for(let s=0;s<e-t.toString().length;s++)i+="0";return i+=t.toString(),i}const c=(t,e)=>{const i={horizontal:(t.position.x+t.scale.width)/2-(e.position.x+e.scale.width)/2,vertical:t.position.y+t.scale.height-(e.position.y+e.scale.height)};return i.horizontal*=-1,i.vertical*=-1,i};function m(t,e,i){const s=(Math.random()*(e-t)+t).toFixed(i);return parseFloat(s)}function g(t,e,i){return!(i<t||i>e)}const p=document.querySelector("#ui"),y=document.querySelector("#canvas");p.style.width=y.style.width+"px";const f=()=>{p.innerHTML="",[s.dev.currentScene,l(s.stats.score,6),"top",l(s.stats.topScore,6),"falls",l(s.stats.lives,2)].map((t=>{const e=document.createElement("div");e.innerHTML=t.toString().toUpperCase(),p.append(e)})),p.style.display=s.dev.paused||!s.dev.launched?"none":"flex",document.querySelector("#hint").innerHTML=s.dev.launched?"":"Press spacebar to start"};class x extends a{constructor(t,{id:e,door:i}){super(t,{idle:{frameRate:3,frameBuffer:30,loop:!0,imageSrc:"../assets/sprites/lantern/lantern.jpg"}},3),this.id=e,this.door=i,this.scale=t.scale,this.position=t.position,this.collected=!1}update(){this.collected||this.render(),this.onCollect()}onCollect(){d(this,S)&&(this.collected=!0,s.stats.score+=125,s.stats.collectedLanterns+=1,s.stats.topScore=s.stats.score,f(),null!==this.door&&h[s.dev.currentScene].triggers.map((t=>{t.id===this.door&&(t.opened=!0)})),L.lanterns=L.lanterns.filter((t=>t.id!==this.id)),h[s.dev.currentScene].lanterns.map((t=>{t.id!==this.id||t.collected||(t.collected=!0)})))}}class w extends a{constructor(t,a,o){super(a,o,1),this.horizontalCollisionDetection=(t=h[s.dev.currentScene].colliders)=>{t.map((t=>{if(r(this.hitbox,t)){if(this.velocity.x>0){const e=this.hitbox.position.x-this.position.x+this.hitbox.scale.width;this.position.x=t.x-e-.01,console.log(this.name+" collides with "+t.name,"right")}if(this.velocity.x<-0){const e=this.hitbox.position.x-this.position.x;this.position.x=t.x+t.width-e+.01,console.log(this.name+" collides with "+t.name,"left")}}}))},this.verticalCollisionDetection=(t=h[s.dev.currentScene].colliders)=>{t.map((t=>{if(r(this.hitbox,t)){if(this.velocity.y>0){this.velocity.y=0;const e=this.hitbox.position.y-this.position.y+this.hitbox.scale.height;this.position.y=t.y-e-.1,s.dev.inColDetectionMode&&console.log(this.name+" collides with "+t.name,"bottom")}if(this.velocity.y<0){this.velocity.y=0;const e=this.hitbox.position.y-this.position.y;this.position.y=t.y+t.height-e+.1,s.dev.inColDetectionMode&&console.log(this.name+" collides with "+t.name,"up")}}}))},this.triggerCollisionDetection=()=>{h[s.dev.currentScene].triggers&&h[s.dev.currentScene].triggers.map((t=>{if(r(this.hitbox,t))switch(t.mode){case"ladder":this.triggers.onLadder=!0;break;case"water":this.triggers.onWater=!0,this.triggers.onLadder=!0,this.waterDirection=t.dir;break;case"door":if(!t.opened)switch(this.updateHitbox(),t.model){case 0:case 2:case 3:this.createVirtualCollider(t,"v");break;default:this.createVirtualCollider(t,"h")}break;case"loader":switch(this.velocity.x=0,this.velocity.y=0,t.dir){case"right":this.position.x=.1,this.position.y-=this.gravity/2;break;case"left":this.position.x=e.width-this.scale.width-.1,this.position.y-=this.gravity/2;break;case"down":this.position.x=(i=e.width,Math.floor(Math.random()*i)),this.position.y=0;break;case"up":break;case"custom":this.position.x=t.custom.x,this.position.y=t.custom.y}}var i}))},this.trapCollisionDetection=()=>{h[s.dev.currentScene].traps&&h[s.dev.currentScene].traps.map((t=>{r(this.hitbox,t)&&(this.health-=t.dmg)}))},this.platformCollisionDetection=()=>{h[s.dev.currentScene].platforms.map((t=>{if(n(this.hitbox,t)&&this.velocity.y>0){this.velocity.y=0;const e=this.hitbox.position.y-this.position.y+this.hitbox.scale.height;this.position.y=t.y-e-.1,console.log("player collides with "+t.name,"bottom")}}))},this.applyGravity=()=>{this.position.y+=this.velocity.y,this.velocity.y+=this.gravity},this.applyLadderMovement=()=>{this.position.y+=this.velocity.y,this.updateHitbox(),this.verticalCollisionDetection(),this.velocity.y=0},this.applyWaterMovement=()=>{this.position.y+=this.velocity.y,this.updateHitbox(),this.verticalCollisionDetection(),this.velocity.y="up"==this.waterDirection?-this.onWaterSpeed:this.onWaterSpeed},this.updateHitbox=()=>{this.hitbox={position:{x:this.position.x+1,y:this.position.y+2},scale:{width:16,height:19}}},this.drawHitbox=()=>{i.fillStyle="rgba(122,0,0,0.5)",i.fillRect(this.hitbox.position.x,this.hitbox.position.y,this.hitbox.scale.width,this.hitbox.scale.height),i.fillStyle="rgba(255,255,0,0.5)",this.triggers.attackBoxDisplay&&i.fillRect(this.attackBox.position.x+(this.facingRight?10:-10),this.attackBox.position.y,this.attackBox.scale.width,this.attackBox.scale.height)},this.switchSprite=t=>{this.image!==this.animations[t].image&&this.loaded&&(this.image=this.animations[t].image,this.frameRate=this.animations[t].frameRate,this.frameBuffer=this.animations[t].frameBuffer)},this.attack=()=>{this.date=new Date,this.date.getTime()-this.lastActions.attack<this.cooldowns.attack||(this.triggers.inAttack=!0,this.triggers.attackBoxDisplay=!0,this.switchSprite(this.facingRight?"attackRight":"attackLeft"),setTimeout((()=>this.triggers.attackBoxDisplay=!1),"sumo"===this.name?600:400),setTimeout((()=>this.triggers.inAttack=!1),"sumo"===this.name?600:400),this.lastActions.attack=this.date.getTime())},this.destroy=()=>{this.triggers.isDead=!0,this.health<=0&&(s.stats.score+="sumo"===this.name?450:200,s.stats.topScore=s.stats.score,f()),setTimeout((()=>this.revive()),"sumo"===this.name?8e3:5e3)},this.name=t,this.date=new Date,this.scale=a.scale,this.position=a.position,this.velocity=a.velocity,this.gravity=s.physics.gravityScale,this.jumpHeight=s.physics.jumpHeight,this.climbSpeed=s.physics.climbSpeed,this.sprite=new Image,this.sprite.src="",this.triggers={onLadder:!1,onWater:!1,inAttack:!1,isDead:!1,shocked:!1,attackBoxDisplay:!1,isCrouch:!1},this.cooldowns={climb:150,jump:500,attack:"sumo"===this.name?5e3:2500},this.lastActions={climb:this.date.getTime(),jump:this.date.getTime(),attack:this.date.getTime()},this.health="sumo"===this.name?120:99,this.facingRight=!1,this.inAir=this.velocity.y>s.physics.gravityScale+.1||this.velocity.y<0,this.onWaterSpeed=s.physics.onWaterSpeed,this.attackRange="sumo"===this.name?12:6,this.safeDistance=22+m(0,10,3),this.heightDifference=15,this.attackBox={position:this.position,scale:{width:14,height:10}}}update(){this.triggers.isDead||(this.render(),this.position.x+=this.velocity.x,this.attackBox={position:this.position,scale:{width:14,height:10}},this.updateHitbox(),this.facingRight=c(this.hitbox,S).horizontal>0,this.inAir=this.velocity.y>s.physics.gravityScale+.1||this.velocity.y<0,this.triggers.onLadder=!1,this.triggers.onWater=!1,this.updateHitbox(),this.triggerCollisionDetection(),this.updateHitbox(),this.trapCollisionDetection(),this.updateHitbox(),this.horizontalCollisionDetection(),this.triggers.onLadder&&this.triggers.onWater?this.applyWaterMovement():this.triggers.onLadder?this.applyLadderMovement():this.applyGravity(),this.updateHitbox(),this.verticalCollisionDetection(),this.updateHitbox(),this.platformCollisionDetection(),this.updateHitbox(),s.dev.inDevelopmendMode&&this.drawHitbox(),this.triggers.inAttack||(this.velocity.x=0),this.triggers.attackBoxDisplay&&this.attackBoxCollisionDetection(),this.applyAiControls(),this.health<=0&&this.destroy())}createVirtualCollider(t,e){switch(this.updateHitbox(),e){case"h":this.horizontalCollisionDetection(h[s.dev.currentScene].triggers);break;case"v":this.verticalCollisionDetection(h[s.dev.currentScene].triggers),this.updateHitbox(),this.horizontalCollisionDetection(h[s.dev.currentScene].triggers)}}applyAiControls(){if(this.updateHitbox(),!this.triggers.shocked)if(this.inAir)this.switchSprite("fall");else{this.triggers.inAttack||this.switchSprite(this.facingRight?"idleRight":"idleLeft");const t=g(-this.heightDifference,this.heightDifference,c(this.hitbox,S).vertical);c(this.hitbox,S).horizontal<(t?-this.attackRange:-this.safeDistance)?(this.velocity.x=-s.physics.velocity*("sumo"===this.name?.6:.8),this.switchSprite(this.velocity.x<0?"walkLeft":"idleLeft")):c(this.hitbox,S).horizontal>(t?this.attackRange:this.safeDistance)?(this.velocity.x=s.physics.velocity*("sumo"===this.name?.6:.8),this.switchSprite(this.velocity.x>0?"walkRight":"idleRight")):"sumo"===this.name?t&&(g(-6,6,c(this.hitbox,S).horizontal)?this.facingRight?this.velocity.x=.5*-s.physics.velocity:this.velocity.x=.5*s.physics.velocity:g(-8,8,c(this.hitbox,S).horizontal)||(this.attack(),this.facingRight?this.velocity.x=.5*s.physics.velocity:this.velocity.x=.5*-s.physics.velocity)):t&&this.attack()}}attackBoxCollisionDetection(){S.updateHitbox(),j.updateHitbox(),R.updateHitbox(),this.damage(S),this.damage("sumo"===this.name?R:j)}damage(t){d(this.attackBox,t.hitbox)&&(t.triggers.isCrouch||t.triggers.shocked||(t.health-=20,this.facingRight?t.velocity.x=1.2*s.physics.velocity:t.velocity.x=1.2*-s.physics.velocity,t.velocity.y-=1,t.triggers.shocked=!0,setTimeout((()=>t.triggers.shocked=!1),1e3),t.switchSprite(this.facingRight?"hitRight":"hitLeft"),this.triggers.attackBoxDisplay=!1))}revive(){if(this.triggers.isDead=!1,this.health="sumo"===this.name?120:99,h[s.dev.currentScene].entrances){if(h[s.dev.currentScene].entrances.length>0){const t=h[s.dev.currentScene].entrances[Math.floor(Math.random()*h[s.dev.currentScene].entrances.length)];this.position={x:t.x,y:t.y}}}else this.destroy()}}const u={a:{pressed:!1},d:{pressed:!1},w:{pressed:!1},s:{pressed:!1}};let v;window.onkeydown=t=>{switch(t.key.toLowerCase()){case"a":case"arrowleft":(0===S.velocity.y||S.velocity.y===s.physics.gravityScale||S.triggers.onLadder)&&(u.a.pressed=!0,v="a"),S.climbAnimVariant=1===S.climbAnimVariant?2:1;break;case"d":case"arrowright":(0===S.velocity.y||S.velocity.y===s.physics.gravityScale||S.triggers.onLadder)&&(u.d.pressed=!0,v="d"),S.climbAnimVariant=1===S.climbAnimVariant?2:1;break;case"w":case"arrowup":u.w.pressed=!0,S.jump();break;case"s":case"arrowdown":u.s.pressed=!0,S.down();break;case"f":S.attack();break;case" ":case"Spacebar":s.dev.launched||setTimeout((()=>{s.dev.currentScene=0,s.dev.launched=!0,s.dev.paused=!1,f()}),100)}t.ctrlKey&&"q"===t.key&&(s.dev.inDevelopmendMode=!s.dev.inDevelopmendMode)},window.onkeyup=t=>{switch(t.key){case"w":case"ArrowUp":u.w.pressed=!1;break;case"a":case"ArrowLeft":u.a.pressed=!1;break;case"d":case"ArrowRight":u.d.pressed=!1;break;case"s":case"ArrowDown":u.s.pressed=!1,S.triggers.isCrouch=!1}};class b extends a{constructor(t,e){super(t,e,e.idle.frameRate),this.update=()=>this.render()}}class k extends a{constructor(t,e,i,h=240){super(t,e,e.idle.frameRate),this.update=()=>{this.render(),this.activate(),this.updateHitbox(),s.dev.inDevelopmendMode&&this.drawHitbox(),this.triggers.active?this.position.x+=2:this.position.x=this.start.position.x-this.start.scale.width,this.triggers.active&&this.checkForHitboxCollision()},this.activate=()=>{this.date=new Date,this.date.getTime()-this.lastActions.activation<this.cooldowns.activation||(this.triggers.active=!0,this.lastActions.activation=this.date.getTime(),setTimeout((()=>this.triggers.active=!1),this.timeout))},this.start={position:t.position,scale:t.scale},this.position={x:t.position.x-t.scale.width,y:t.position.y},this.scale=t.scale,this.date=new Date,this.triggers={active:!1},this.cooldowns={activation:1700},this.lastActions={activation:this.date.getTime()},this.timeout=h,this.hitbox={position:this.position,scale:this.scale},this.dmg=i}updateHitbox(){this.hitbox={position:this.position,scale:this.scale}}drawHitbox(){i.fillStyle="rgba(255,0,0,0.5)",i.fillRect(this.hitbox.position.x,this.hitbox.position.y,this.hitbox.scale.width,this.hitbox.scale.height)}checkForHitboxCollision(){this.damage(S)}damage(t){d(this.hitbox,t.hitbox)&&t&&(console.error("enemy ",t.health),t.health-=this.dmg,console.error("enemy ",t.health),this.triggers.active=!1)}}const S=new class extends a{constructor(t,a){super(t,a,1),this.horizontalCollisionDetection=(t=h[s.dev.currentScene].colliders)=>{t.map((t=>{if(r(this.hitbox,t)){if(this.velocity.x>0){const e=this.hitbox.position.x-this.position.x+this.hitbox.scale.width;this.position.x=t.x-e-.01,s.dev.inColDetectionMode&&console.log(this.name+" collides with "+t.name,"right")}if(this.velocity.x<-0){const e=this.hitbox.position.x-this.position.x;this.position.x=t.x+t.width-e+.01,s.dev.inColDetectionMode&&console.log(this.name+" collides with "+t.name,"left")}}}))},this.verticalCollisionDetection=(t=h[s.dev.currentScene].colliders)=>{t.map((t=>{if(!this.updateLevel&&r(this.hitbox,t)){if(this.velocity.y>0){this.velocity.y=0;const e=this.hitbox.position.y-this.position.y+this.hitbox.scale.height;this.position.y=t.y-e-.1,s.dev.inColDetectionMode&&console.log("player collides with "+t.name,"bottom")}if(this.velocity.y<0){this.velocity.y=0;const e=this.hitbox.position.y-this.position.y;this.position.y=t.y+t.height-e+.1,s.dev.inColDetectionMode&&console.log("player collides with "+t.name,"up")}}}))},this.applyGravity=()=>{this.position.y+=this.velocity.y,this.velocity.y+=this.gravity},this.applyLadderMovement=()=>{this.position.y+=this.velocity.y,this.updateHitbox(),this.verticalCollisionDetection(),this.velocity.y=0},this.applyWaterMovement=()=>{this.position.y+=this.velocity.y,this.updateHitbox(),this.verticalCollisionDetection(),this.velocity.y="up"==this.waterDirection?-this.onWaterSpeed:this.onWaterSpeed},this.updateHitbox=()=>{this.hitbox={position:this.triggers.isCrouch?{x:this.position.x+2,y:this.position.y+17}:{x:this.position.x+1,y:this.position.y},scale:this.triggers.isCrouch?{width:30,height:3}:{width:16,height:21}}},this.drawHitbox=()=>{i.fillStyle="rgba(255,0,0,0.5)",i.fillRect(this.hitbox.position.x,this.hitbox.position.y,this.hitbox.scale.width,this.hitbox.scale.height),i.fillStyle="rgba(255,255,0,0.5)",this.triggers.attackBoxDisplay&&i.fillRect(this.attackBox.position.x+("a"===v?0:10),this.attackBox.position.y,this.attackBox.scale.width,this.attackBox.scale.height)},this.switchSprite=t=>{this.image!==this.animations[t].image&&this.loaded&&(this.image=this.animations[t].image,this.frameRate=this.animations[t].frameRate,this.frameBuffer=this.animations[t].frameBuffer)},this.jump=()=>{if(this.date=new Date,!(0!==this.velocity.y&&this.velocity.y!==this.gravity||this.triggers.onLadder||this.triggers.isCrouch)){if(this.date.getTime()-this.lastActions.jump<this.cooldowns.jump)return;this.velocity.y=-this.jumpHeight,this.lastActions.jump=this.date.getTime()}if(0===this.velocity.y&&this.triggers.onLadder||this.triggers.onWater){if(this.date.getTime()-this.lastActions.climb<this.cooldowns.climb)return;this.velocity.y=-this.climbSpeed,this.climbAnimVariant=1===this.climbAnimVariant?2:1,this.lastActions.climb=this.date.getTime()}},this.down=()=>{if(this.date=new Date,0!==this.velocity.y&&this.velocity.y!==this.gravity||this.triggers.onLadder||(this.updateHitbox(),this.triggers.isCrouch=!0),0===this.velocity.y&&this.triggers.onLadder||this.triggers.onWater){if(this.date.getTime()-this.lastActions.climb<this.cooldowns.climb)return;this.triggers.onWater&&(this.velocity.y+=this.onWaterSpeed),this.velocity.y=this.climbSpeed,this.climbAnimVariant=1===this.climbAnimVariant?2:1,this.lastActions.climb=this.date.getTime()}},this.triggerCollisionDetection=()=>{h[s.dev.currentScene].triggers&&h[s.dev.currentScene].triggers.map((t=>{if(r(this.hitbox,t))switch(t.mode){case"ladder":this.triggers.onLadder=!0;break;case"water":this.triggers.onWater=!0,this.triggers.onLadder=!0,this.waterDirection=t.dir;break;case"loader":switch(this.levelToLoad=t.level,this.updateLevel=!0,this.velocity.x=0,this.velocity.y=0,t.dir){case"right":this.position.x=.1,this.position.y-=this.gravity/2;break;case"left":this.position.x=e.width-this.scale.width-.1,this.position.y-=this.gravity/2;break;case"down":this.position.x=t.hatch.x+t.hatch.width/2-this.scale.width/2,this.position.y=0;case"up":break;case"custom":this.position.x=t.custom.x,this.position.y=t.custom.y}break;case"door":if(!t.opened)switch(this.updateHitbox(),t.model){case 0:case 2:case 3:this.createVirtualCollider(t,"v");break;default:this.createVirtualCollider(t,"h")}}}))},this.trapCollisionDetection=()=>{h[s.dev.currentScene].traps&&h[s.dev.currentScene].traps.map((t=>{r(this.hitbox,t)&&"spike"===t.name&&(this.health-=t.dmg)}))},this.platformCollisionDetection=()=>{h[s.dev.currentScene].platforms.map((t=>{if(n(this.hitbox,t)&&this.velocity.y>0){this.velocity.y=0;const e=this.hitbox.position.y-this.position.y+this.hitbox.scale.height;this.position.y=t.y-e-.1,s.dev.inColDetectionMode&&console.log(this.name+" collides with "+t.name,"bottom")}}))},this.name="player",this.date=new Date,this.scale=t.scale,this.position=t.position,this.velocity=t.velocity,this.gravity=s.physics.gravityScale,this.jumpHeight=s.physics.jumpHeight,this.climbSpeed=s.physics.climbSpeed,this.onWaterSpeed=s.physics.onWaterSpeed,this.sprite=new Image,this.sprite.src="../assets/sprites/brucelee/brucelee-anim.jpg",this.triggers={onLadder:!1,onWater:!1,isCrouch:!1,inAttack:!1,attackBoxDisplay:!1,shocked:!1},this.cooldowns={climb:150,jump:500,attack:400},this.lastActions={climb:this.date.getTime(),jump:this.date.getTime(),attack:this.date.getTime()},this.climbAnimVariant=1,this.levelToLoad=s.dev.currentScene,this.updateLevel=!1,this.health=120,this.attackBox={position:{x:this.position.x+("a"===v?0:10),y:this.position.y},scale:{width:14,height:21}}}update(){this.render(),this.position.x+=this.velocity.x,this.triggers.onLadder=!1,this.triggers.onWater=!1,this.attackBox={position:{x:this.position.x+("a"===v?0:10),y:this.position.y},scale:{width:14,height:21}},this.triggers.shocked||(0!==this.velocity.x||"d"!==v||this.triggers.inAttack||this.switchSprite("idleRight"),0!==this.velocity.x||"a"!==v||this.triggers.inAttack||this.switchSprite("idleLeft"),0!==this.velocity.x||void 0!==v||this.triggers.inAttack||this.switchSprite("idleRight")),this.updateHitbox(),this.triggerCollisionDetection(),this.updateHitbox(),this.trapCollisionDetection(),this.updateHitbox(),this.horizontalCollisionDetection(),this.triggers.onLadder&&this.triggers.onWater?this.applyWaterMovement():this.triggers.onLadder?this.applyLadderMovement():this.applyGravity(),this.updateHitbox(),this.verticalCollisionDetection(),this.updateHitbox(),this.platformCollisionDetection(),this.triggers.attackBoxDisplay&&this.attackBoxCollisionDetection(),this.updateHitbox(),s.dev.inDevelopmendMode&&this.drawHitbox(),this.triggers.inAttack||(this.velocity.x=0),this.triggers.shocked||this.applyControls(),this.health<=0&&this.setDead(),console.log(this.health)}createVirtualCollider(t,e){switch(this.updateHitbox(),e){case"h":this.horizontalCollisionDetection(h[s.dev.currentScene].triggers);break;case"v":this.verticalCollisionDetection(h[s.dev.currentScene].triggers),this.updateHitbox(),this.horizontalCollisionDetection(h[s.dev.currentScene].triggers)}}attack(){if(this.date=new Date,!(this.triggers.isCrouch||this.triggers.onLadder||this.velocity.y<0)){if(this.date.getTime()-this.lastActions.attack<this.cooldowns.attack)return;this.triggers.inAttack=!0,this.triggers.attackBoxDisplay=!0,setTimeout((()=>this.triggers.attackBoxDisplay=!1),400),setTimeout((()=>this.triggers.inAttack=!1),0===this.velocity.x?150:400),this.lastActions.attack=this.date.getTime()}}applyControls(){this.triggers.isCrouch?this.switchSprite("d"===v?"lieRight":"lieLeft"):this.triggers.inAttack?0===this.velocity.x?this.switchSprite("a"===v?"attackLeft":"attackRight"):this.switchSprite("a"===v?"attack2Left":"attack2Right"):(u.a.pressed&&"a"===v&&(this.velocity.x=-s.physics.velocity,this.switchSprite("walkLeft")),u.d.pressed&&"d"===v&&(this.velocity.x=s.physics.velocity,this.switchSprite("walkRight")),this.velocity.y<0&&u.a.pressed&&"a"===v?(this.velocity.x=.8*-s.physics.velocity,this.switchSprite("jumpLeft")):this.velocity.y<0&&u.d.pressed&&"d"===v?(this.velocity.x=.8*s.physics.velocity,this.switchSprite("jumpRight")):this.velocity.y<0?this.switchSprite("jump"):this.velocity.y>s.physics.gravityScale+.1&&this.switchSprite("fall"),u.a.pressed&&"a"===v&&this.triggers.onLadder?this.velocity.x=.7*-s.physics.velocity:u.d.pressed&&"d"===v&&this.triggers.onLadder&&(this.velocity.x=.7*s.physics.velocity),this.triggers.onLadder&&this.switchSprite(1===this.climbAnimVariant?"climb2":"climb1"))}attackBoxCollisionDetection(){this.damage(R),this.damage(j)}damage(t){d(this.attackBox,t)&&(t.triggers.shocked||(t.health-=33,s.stats.score+=75,t.triggers.shocked=!0,setTimeout((()=>t.triggers.shocked=!1),1e3),t.velocity.x="a"===v?4*-s.physics.velocity:4*s.physics.velocity,t.switchSprite("a"===v?"hitRight":"hitLeft"),this.triggers.attackBoxDisplay=!1))}setDead(){s.stats.lives--,f(),this.levelToLoad=9,this.updateLevel=!0,s.dev.paused=!0,f()}revive(){this.health=120,this.position=h[s.dev.currentScene].defaultPlayerPosition}}({position:h[s.dev.currentScene].defaultPlayerPosition,velocity:{x:0,y:0},scale:{width:15,height:22}},{idle:{frameRate:1,frameBuffer:2,loop:!0,imageSrc:"../assets/sprites/brucelee/idleRight.jpg"},idleRight:{frameRate:1,frameBuffer:2,loop:!0,imageSrc:"../assets/sprites/brucelee/idleRight.jpg"},idleLeft:{frameRate:1,frameBuffer:2,loop:!1,imageSrc:"../assets/sprites/brucelee/idleLeft.jpg"},walkLeft:{frameRate:2,frameBuffer:6,loop:!1,imageSrc:"../assets/sprites/brucelee/walkLeft.jpg"},walkRight:{frameRate:2,frameBuffer:6,loop:!1,imageSrc:"../assets/sprites/brucelee/walkRight.jpg"},jump:{frameRate:3,frameBuffer:8,loop:!0,imageSrc:"../assets/sprites/brucelee/jump.jpg"},jumpLeft:{frameRate:2,frameBuffer:16,loop:!0,imageSrc:"../assets/sprites/brucelee/jumpLeft.jpg"},jumpRight:{frameRate:2,frameBuffer:16,loop:!0,imageSrc:"../assets/sprites/brucelee/jumpRight.jpg"},fall:{frameRate:1,frameBuffer:2,loop:!0,imageSrc:"../assets/sprites/brucelee/fall.jpg"},climb1:{frameRate:1,frameBuffer:2,loop:!0,imageSrc:"../assets/sprites/brucelee/climb1.jpg"},climb2:{frameRate:1,frameBuffer:2,loop:!0,imageSrc:"../assets/sprites/brucelee/climb2.jpg"},lieLeft:{frameRate:1,frameBuffer:2,loop:!0,imageSrc:"../assets/sprites/brucelee/lieLeft.jpg"},lieRight:{frameRate:1,frameBuffer:2,loop:!0,imageSrc:"../assets/sprites/brucelee/lieRight.jpg"},attackLeft:{frameRate:1,frameBuffer:2,loop:!0,imageSrc:"../assets/sprites/brucelee/attackLeft.jpg"},attackRight:{frameRate:1,frameBuffer:2,loop:!0,imageSrc:"../assets/sprites/brucelee/attackRight.jpg"},attack2Left:{frameRate:2,frameBuffer:16,loop:!0,imageSrc:"../assets/sprites/brucelee/attack2Left.jpg"},attack2Right:{frameRate:2,frameBuffer:16,loop:!0,imageSrc:"../assets/sprites/brucelee/attack2Right.jpg"},hitLeft:{frameRate:2,frameBuffer:14,loop:!0,imageSrc:"../assets/sprites/brucelee/hitLeft.jpg"},hitRight:{frameRate:2,frameBuffer:14,loop:!0,imageSrc:"../assets/sprites/brucelee/hitRight.jpg"}}),R=new w("ninja",{position:{x:270,y:20},velocity:{x:0,y:0},scale:{width:28,height:21}},{idle:{frameRate:1,frameBuffer:2,loop:!0,imageSrc:"../assets/sprites/ninja/idleRight.jpg"},idleRight:{frameRate:1,frameBuffer:2,loop:!0,imageSrc:"../assets/sprites/ninja/idleRight.jpg"},idleLeft:{frameRate:1,frameBuffer:2,loop:!1,imageSrc:"../assets/sprites/ninja/idleLeft.jpg"},walkLeft:{frameRate:2,frameBuffer:16,loop:!1,imageSrc:"../assets/sprites/ninja/walkLeft.jpg"},walkRight:{frameRate:2,frameBuffer:16,loop:!1,imageSrc:"../assets/sprites/ninja/walkRight.jpg"},fall:{frameRate:1,frameBuffer:2,loop:!0,imageSrc:"../assets/sprites/ninja/fall.jpg"},attackLeft:{frameRate:2,frameBuffer:14,loop:!0,imageSrc:"../assets/sprites/ninja/attackLeft.jpg"},attackRight:{frameRate:2,frameBuffer:14,loop:!0,imageSrc:"../assets/sprites/ninja/attackRight.jpg"},hitLeft:{frameRate:2,frameBuffer:14,loop:!0,imageSrc:"../assets/sprites/ninja/hitLeft.jpg"},hitRight:{frameRate:2,frameBuffer:14,loop:!0,imageSrc:"../assets/sprites/ninja/hitRight.jpg"}}),j=new w("sumo",{position:{x:230,y:20},velocity:{x:0,y:0},scale:{width:28,height:21}},{idle:{frameRate:2,frameBuffer:2,loop:!0,imageSrc:"../assets/sprites/sumo/idleRight.jpg"},idleRight:{frameRate:2,frameBuffer:60,loop:!0,imageSrc:"../assets/sprites/sumo/idleRight.jpg"},idleLeft:{frameRate:2,frameBuffer:60,loop:!1,imageSrc:"../assets/sprites/sumo/idleLeft.jpg"},walkLeft:{frameRate:2,frameBuffer:16,loop:!1,imageSrc:"../assets/sprites/sumo/walkLeft.jpg"},walkRight:{frameRate:2,frameBuffer:16,loop:!1,imageSrc:"../assets/sprites/sumo/walkRight.jpg"},fall:{frameRate:1,frameBuffer:2,loop:!0,imageSrc:"../assets/sprites/sumo/fall.jpg"},attackLeft:{frameRate:2,frameBuffer:14,loop:!0,imageSrc:"../assets/sprites/sumo/attackLeft.jpg"},attackRight:{frameRate:2,frameBuffer:14,loop:!0,imageSrc:"../assets/sprites/sumo/attackRight.jpg"},hitLeft:{frameRate:2,frameBuffer:14,loop:!0,imageSrc:"../assets/sprites/sumo/hitLeft.jpg"},hitRight:{frameRate:2,frameBuffer:14,loop:!0,imageSrc:"../assets/sprites/sumo/hitRight.jpg"}});for(;Math.abs(j.safeDistance-R.safeDistance)<6;)j.safeDistance=15+m(0,15,3),R.safeDistance=15+m(0,15,3);const D=new class{constructor(t){this.position=t.position,this.scale=t.scale,this.image=new Image,this.image.onload=()=>{this.scale.width=this.image.width,this.scale.height=this.image.height},this.image.src=h[s.dev.currentScene].sprite}render(){i.drawImage(this.image,this.position.x,this.position.y,this.scale.width,this.scale.height)}update(){this.render(),this.image.src=h[s.dev.currentScene].sprite}}({position:{x:0,y:0},scale:{width:e.width,height:e.height}}),L={lanterns:[],doors:[],waterfalls:[],traps:[]},B=()=>{var t;window.requestAnimationFrame(B),S.updateLevel&&(9!==S.levelToLoad&&(s.dev.lastPossibleScene=S.levelToLoad),s.dev.currentScene=S.levelToLoad,s.stats.visited.push(s.dev.currentScene),console.warn("scene change"),s.stats.score+=s.stats.visited.includes(s.dev.currentScene)?0:2e3,S.updateLevel=!1,L.lanterns=[],L.doors=[],L.waterfalls=[],L.traps=[],s.stats.topScore=s.stats.score,R.destroy(),j.destroy(),f(),C()),D.update(),s.dev.launched?s.dev.paused?s.stats.lives>0?setTimeout((()=>H()),3e3):A():(L.lanterns.map((t=>t.update())),L.doors.map((t=>t.update())),L.waterfalls.map((t=>t.update())),L.traps.map((t=>t.update())),R.update(),j.update(),S.update(),s.dev.inDevelopmendMode&&(t=s.dev.currentScene,h[t].colliders.map((t=>{i.fillStyle="rgba(0,255,0,0.5)","platform"===t.name&&(i.fillStyle="rgba(255,255,0,0.5)"),i.fillRect(t.x,t.y,t.width,t.height)})),h[t].triggers.map((t=>{i.fillStyle="door"===t.name?"rgba(255,165,0,0.5)":"rgba(0,0,255,0.5)",i.fillRect(t.x,t.y,t.width,t.height)})),h[t].lanterns.map((t=>{t.collected||(i.fillStyle="rgba(255,0,0,0.5)",i.fillRect(t.x,t.y,t.width,t.height))})),h[t].platforms&&h[t].platforms.map((t=>{i.fillStyle="rgba(0, 128, 0,0.5)",i.fillRect(t.x,t.y,t.width,t.height)})))):A()};function C(){h[s.dev.currentScene].lanterns.map((t=>{if(!t.collected){const e=new x({position:{x:t.x,y:t.y},scale:{width:6,height:10}},{id:t.id,door:t.door});L.lanterns.push(e)}})),h[s.dev.currentScene].triggers.map((t=>{if("door"===t.name){const e=new o({position:{x:t.x,y:0===t.model?t.y-4:t.y},scale:{width:t.width,height:t.height}},{id:t.id,model:t.model,key:t.key,keyOpened:t.keyOpened});L.doors.push(e)}if("water"===t.name){const e=new b({position:{x:t.x,y:t.y},scale:{width:t.width,height:t.height}},{idle:{frameRate:9,frameBuffer:10,loop:!0,imageSrc:"../assets/sprites/water/water-"+t.model+"-"+t.dir+".jpg"}});L.waterfalls.push(e)}})),h[s.dev.currentScene].traps.map((t=>{if("trap"===t.mode){const e=new k({position:{x:t.x,y:t.y},scale:{width:t.width,height:t.height}},{idle:{frameRate:1,frameBuffer:2,loop:!0,imageSrc:"../assets/sprites/trap/model_"+t.model+".jpg"}},t.dmg,t.timeout);L.traps.push(e)}}))}const H=()=>{s.dev.paused=!1,s.dev.currentScene=s.dev.lastPossibleScene,S.updateLevel=!1,console.log("player is about to be revived"),S.revive(),L.lanterns=[],L.doors=[],L.waterfalls=[],L.traps=[],R.destroy(),j.destroy(),f(),C()},A=()=>{s.dev.currentScene=10,f()};f(),C(),R.destroy(),j.destroy(),B()})();